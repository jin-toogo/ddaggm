name: Deploy to AWS

on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: medihan
  ECS_SERVICE: medihan-service
  ECS_CLUSTER: medihan-cluster
  CONTAINER_NAME: medihan-container
  NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_MIN_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MIN_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build the Docker image
          docker build \
            --build-arg NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            -f Dockerfile .

          # Push the image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      # - name: Build, tag, and push image to Amazon ECR ## nginx
      #   id: build-image-nginx
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: numat-nginx
      #     IMAGE_TAG: latest
      #   run: |
      #     cd nginx
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
